version: "{build}-{branch}"
# stack: ruby 2.7

before_build:
  - git submodule update --init --depth 1
# test_script:
#   - ruby -E UTF-8 tools/coverage.rb

for:
  - matrix: { only: [ appveyor_build_worker_image: &linux Ubuntu2204 ] }
    # cache:
    #   - build/vcpkg_installed -> vcpkg.json, cmake/vcpkg-triplets/arch-env.cmake
    install: |-
      set -e
      sudo sed -i '/arch=/! s/^deb/deb [arch=amd64,i386]/' /etc/apt/sources.list
      awk '
      $3 !~ /ubuntu\.com/ { next }
      $1 == "deb" {
        $2 = "[arch=armhf,arm64]";
        $3 = "http://ports.ubuntu.com/ubuntu-ports/"
      } 1' /etc/apt/sources.list | sudo tee /etc/apt/sources.list.d/ports.list > /dev/null
      install-deps() {
        local arch="$1"; shift
        local native=("$@")
        local target=()
        sudo dpkg --add-architecture $arch
        sudo apt-get update -qq
        sudo apt-get install -qq aptitude
        sudo aptitude install -yR ${native[@]} ${target[@]/%/:$arch}
      }
        # sudo update-alternatives --set gcc /usr/bin/gcc-7
      case $ARCH in
      x86_64)
        install-deps amd64
        export TOOLCHAIN=~/vcpkg/scripts/buildsystems/vcpkg.cmake
        ;;
      i686)
        install-deps i386 g++-multilib
        export TOOLCHAIN_PREFIX=i386-linux-gnu
        export TOOLCHAIN=cmake/linux-cross.cmake
        ;;
      armv7l)
        install-deps armhf g++-arm-linux-gnueabihf
        export TOOLCHAIN_PREFIX=arm-linux-gnueabihf
        export TOOLCHAIN=cmake/linux-cross.cmake
        ;;
      aarch64)
        install-deps arm64 g++-aarch64-linux-gnu
        export TOOLCHAIN_PREFIX=aarch64-linux-gnu
        export TOOLCHAIN=cmake/linux-cross.cmake
        ;;
      esac
      sudo aptitude install -yR php-cli
      TRIPLET=arch-env 
      export VCPKG_OVERLAY_TRIPLETS=cmake/vcpkg-triplets
    build_script:
    - cmake -B build -DCMAKE_BUILD_TYPE=Release
      -DVCPKG_TARGET_TRIPLET=$TRIPLET -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN
    - cmake --build build --target reaper_reamculive

    artifacts:
      - path: build/reaper_*.so

  - matrix: { only: [ appveyor_build_worker_image: macos-catalina, appveyor_build_worker_image: macos, appveyor_build_worker_image: macos-mojave ] }
    cache:
      - build/vcpkg_installed -> vcpkg.json, cmake/vcpkg-triplets/arch-env.cmake
    install:
      - TRIPLET=arch-env TOOLCHAIN=~/vcpkg/scripts/buildsystems/vcpkg.cmake
      - export VCPKG_OVERLAY_TRIPLETS=cmake/vcpkg-triplets

      - |-
        case $ARCH in
        arm64) export DEPLOY_TARGET=11.0 XCODE_VERSION=12.3  ;;
        x86_64) export DEPLOY_TARGET=10.4 XCODE_VERSION=12.3 ;;
        *)     export DEPLOY_TARGET=10.9 XCODE_VERSION=9.4.1 ;;
        esac
      - sudo xcode-select -s /Applications/Xcode-$XCODE_VERSION.app

      # https://letsencrypt.org/docs/dst-root-ca-x3-expiration-september-2021/
      - sudo curl -k https://curl.se/ca/cacert.pem -o /etc/ssl/cert.pem
    build_script:
    - cmake -B build -DCMAKE_BUILD_TYPE=Release
      -DVCPKG_TARGET_TRIPLET=$TRIPLET -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN
      -DCMAKE_OSX_ARCHITECTURES=$ARCH
    - cmake --build build --target reaper_reamculive

    artifacts:
      - path: build/reaper_*.dylib

  - matrix: { only: [ appveyor_build_worker_image: &windows Visual Studio 2022 ] }
    cache:
      - build\vcpkg_installed -> vcpkg.json
    install:
      - if "%ARCH%" == "x64" call "%ProgramFiles%\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
      - if "%ARCH%" == "x86" call "%ProgramFiles%\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars32.bat"
    build_script:
      - cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
        -DVCPKG_TARGET_TRIPLET=%ARCH%-windows-static
        -DCMAKE_TOOLCHAIN_FILE=C:\Tools\vcpkg\scripts\buildsystems\vcpkg.cmake
      - cmake --build build
    artifacts:
      - path: build\reaper_*.dll

environment:
  matrix:
    - job_name: Linux x86 64-bit
      appveyor_build_worker_image: *linux
      ARCH: x86_64
    - job_name: macOS x86 64-bit
      appveyor_build_worker_image: macos-catalina
      ARCH: x86_64
    - job_name: macOS ARM 64-bit
      appveyor_build_worker_image: macos-catalina
      ARCH: arm64
    - job_name: Windows 64-bit
      appveyor_build_worker_image: *windows
      ARCH: x64
    # - job_name: macOS x86 32-bit
    #   appveyor_build_worker_image: macos-mojave
    #   ARCH: i386
    - job_name: Linux ARM 64-bit
      appveyor_build_worker_image: *linux
      ARCH: aarch64
    # - job_name: Linux x86 32-bit
    #   appveyor_build_worker_image: *linux
    #   ARCH: i686
    # - job_name: Linux ARM 32-bit
    #   appveyor_build_worker_image: *linux
    #   ARCH: armv7l
    # - job_name: Windows 32-bit
    #   appveyor_build_worker_image: *windows
    #   ARCH: x86

deploy:
  provider: GitHub
  draft: true
  description: ''
  force_update: true
  auth_token:
    secure: Rk8do2Q/etdabjwIABBRdTJu1a4wYVu9Ltz8HJuC0wc3rz+hHUMGa3N7vTlsrd7z
  artifact: /.*\.(dll|dylib|so|lua)/
  on:
    APPVEYOR_REPO_TAG: true